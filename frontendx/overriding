CSS from top to bottom. That means that, in the event of a conflict, the browserwill use whichever CSS declaration came last.
There are other ways that you can override CSS. 
1 using id element 
So we've proven that id declarations override class declarations, regardless of where they are declared in your style element CSS.

2using inline style -it can override id and class

3In many situations, you will use CSS libraries. These may accidentally override your own CSS. So when you absolutely need to be sure that an element has specific CSS, you can use !important

Let's go all the way back to our pink-text class declaration. Remember that our pink-text class was overridden by subsequent class declarations, id declarations, and in-line styles.
Let's add the keyword !important to your pink-text element's color declaration to make 100% sure that your h1 element will be pink.

An example of how to do this is:

color: red !important;
